add event listener accepts two params
var button = document.getElementsByTagName("button")[0]

When you Click Button:

button.addEventListener("click", function() {
   console.log("CLICK!!");
})

When the Mouse Enters:

button.addEventListener("mouseenter", function() {
    console.log("CLICK!!");
 })

When the Mouse Leaves:

button.addEventListener("mouseleave", function() {
   console.log("CLICK!!");
 })



//////// Callback Functions

Event listener syntax:

button.addEventListener("click", addListAfterClick);
input.addEventListener("keypress", addListAfterKeypress);

You didn't see the function being called like this as you may have expected: 

button.addEventListener("click", addListAfterClick());
input.addEventListener("keypress", addListAfterKeypress(event));

This is something called a callback function. 

When that line of javascript runs, 
we don't want the addListAfterClick function to run 
because we are just adding the event listener now to wait for click or keypress. 
We want to let it know though that we want this action to happen when a click happens. 
So the function now automatically gets run (gets added the ()) every time the click happens. 
So we are passing a reference to the function without running it.

